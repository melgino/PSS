# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mainwindow.ui'
#
# Created by: PyQt5 UI code generator 5.9.2
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(627, 311)
        self.centralWidget = QtWidgets.QWidget(MainWindow)
        self.centralWidget.setObjectName("centralWidget")
        self.yehaibopush = QtWidgets.QPushButton(self.centralWidget)
        self.yehaibopush.setGeometry(QtCore.QRect(470, 210, 85, 29))
        self.yehaibopush.setObjectName("yehaibopush")
        MainWindow.setCentralWidget(self.centralWidget)
        self.menuBar = QtWidgets.QMenuBar(MainWindow)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 627, 26))
        self.menuBar.setObjectName("menuBar")
        self.menuMenu = QtWidgets.QMenu(self.menuBar)
        self.menuMenu.setObjectName("menuMenu")
        self.menuMenu2 = QtWidgets.QMenu(self.menuBar)
        self.menuMenu2.setObjectName("menuMenu2")
        self.menuMonitor_character = QtWidgets.QMenu(self.menuBar)
        self.menuMonitor_character.setObjectName("menuMonitor_character")
        self.menuHelp = QtWidgets.QMenu(self.menuBar)
        self.menuHelp.setObjectName("menuHelp")
        MainWindow.setMenuBar(self.menuBar)
        self.mainToolBar = QtWidgets.QToolBar(MainWindow)
        self.mainToolBar.setObjectName("mainToolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.mainToolBar)
        self.statusBar = QtWidgets.QStatusBar(MainWindow)
        self.statusBar.setObjectName("statusBar")
        MainWindow.setStatusBar(self.statusBar)
        self.actionFrom_logs = QtWidgets.QAction(MainWindow)
        self.actionFrom_logs.setObjectName("actionFrom_logs")
        self.actionFrom_Web_data = QtWidgets.QAction(MainWindow)
        self.actionFrom_Web_data.setObjectName("actionFrom_Web_data")
        self.actionFrom_CSV_file = QtWidgets.QAction(MainWindow)
        self.actionFrom_CSV_file.setObjectName("actionFrom_CSV_file")
        self.actionFrom_Spark = QtWidgets.QAction(MainWindow)
        self.actionFrom_Spark.setObjectName("actionFrom_Spark")
        self.actionFrom_mongodb = QtWidgets.QAction(MainWindow)
        self.actionFrom_mongodb.setObjectName("actionFrom_mongodb")
        self.actionFrom_mysql = QtWidgets.QAction(MainWindow)
        self.actionFrom_mysql.setObjectName("actionFrom_mysql")
        self.actionFrom_Oracle = QtWidgets.QAction(MainWindow)
        self.actionFrom_Oracle.setObjectName("actionFrom_Oracle")
        self.actionFrom_Redis = QtWidgets.QAction(MainWindow)
        self.actionFrom_Redis.setObjectName("actionFrom_Redis")
        self.actionFrom_Elasticsearch = QtWidgets.QAction(MainWindow)
        self.actionFrom_Elasticsearch.setObjectName("actionFrom_Elasticsearch")
        self.actionAbout_documents = QtWidgets.QAction(MainWindow)
        self.actionAbout_documents.setObjectName("actionAbout_documents")
        self.actionAbout_PSS = QtWidgets.QAction(MainWindow)
        self.actionAbout_PSS.setObjectName("actionAbout_PSS")
        self.actionClearn = QtWidgets.QAction(MainWindow)
        self.actionClearn.setObjectName("actionClearn")
        self.actionPre_process = QtWidgets.QAction(MainWindow)
        self.actionPre_process.setObjectName("actionPre_process")
        self.menuMenu.addAction(self.actionFrom_logs)
        self.menuMenu.addAction(self.actionFrom_Web_data)
        self.menuMenu.addAction(self.actionFrom_CSV_file)
        self.menuMenu.addAction(self.actionFrom_Spark)
        self.menuMenu.addAction(self.actionFrom_mongodb)
        self.menuMenu.addAction(self.actionFrom_mysql)
        self.menuMenu.addAction(self.actionFrom_Oracle)
        self.menuMenu.addAction(self.actionFrom_Redis)
        self.menuMenu.addAction(self.actionFrom_Elasticsearch)
        self.menuMenu2.addAction(self.actionClearn)
        self.menuMenu2.addAction(self.actionPre_process)
        self.menuHelp.addAction(self.actionAbout_documents)
        self.menuHelp.addSeparator()
        self.menuHelp.addAction(self.actionAbout_PSS)
        self.menuBar.addAction(self.menuMenu.menuAction())
        self.menuBar.addAction(self.menuMenu2.menuAction())
        self.menuBar.addAction(self.menuMonitor_character.menuAction())
        self.menuBar.addAction(self.menuHelp.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "PSS(Python Statistical Solutions)"))
        self.yehaibopush.setText(_translate("MainWindow", "yehaibo"))
        self.menuMenu.setTitle(_translate("MainWindow", "Get character"))
        self.menuMenu2.setTitle(_translate("MainWindow", "Process character"))
        self.menuMonitor_character.setTitle(_translate("MainWindow", "Monitor character"))
        self.menuHelp.setTitle(_translate("MainWindow", "Help"))
        self.actionFrom_logs.setText(_translate("MainWindow", "From logs"))
        self.actionFrom_Web_data.setText(_translate("MainWindow", "From Web data"))
        self.actionFrom_CSV_file.setText(_translate("MainWindow", "From CSV file"))
        self.actionFrom_Spark.setText(_translate("MainWindow", "From Spark"))
        self.actionFrom_mongodb.setText(_translate("MainWindow", "From mongodb"))
        self.actionFrom_mysql.setText(_translate("MainWindow", "From Mysql"))
        self.actionFrom_Oracle.setText(_translate("MainWindow", "From Oracle"))
        self.actionFrom_Redis.setText(_translate("MainWindow", "From Redis"))
        self.actionFrom_Elasticsearch.setText(_translate("MainWindow", "From Elasticsearch"))
        self.actionAbout_documents.setText(_translate("MainWindow", "About documents"))
        self.actionAbout_PSS.setText(_translate("MainWindow", "About PSS"))
        self.actionClearn.setText(_translate("MainWindow", "Clearn"))
        self.actionPre_process.setText(_translate("MainWindow", "Pre-process"))

